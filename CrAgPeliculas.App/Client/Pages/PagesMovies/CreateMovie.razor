@page "/movies/create"
@inject IRepositories repository
@inject NavigationManager navigationManager
@inject IShowAlerts showAlerts

<HeaderComponent></HeaderComponent>

<AdminFormMovie Movie="Movie" OnValidSubmit="Create" NotSelectedStaff="NotSelectedStaff" SelectedStaff="SelectedStaff" NotSelectedCategories="NotSelectedCategories" SelectedCategories="SelectedCategories"></AdminFormMovie>

<FooterComponent></FooterComponent>

@code{

    public Movie Movie = new Movie();

    public List<Staff> NotSelectedStaff { get; set; }
    public List<Staff> SelectedStaff { get; set; }
    public List<Category> NotSelectedCategories { get; set; }
    public List<Category> SelectedCategories { get; set; }

    protected override void OnInitialized()
    {
        NotSelectedStaff = new List<Staff>();
        SelectedStaff = new List<Staff>();
        NotSelectedCategories = new List<Category>();
        SelectedCategories = new List<Category>();
    }

    private async Task Create()
    {
        var httpResponse = await repository.Post<Movie, int>("api/Movie", Movie);
        if(httpResponse.Error)
        {
            await showAlerts.ShowAlertMessage(await httpResponse.GetStringMsg());
        }
        else
        {
            var MovieId = httpResponse.Response;
            navigationManager.NavigateTo($"/movies/{MovieId}");
        }
    }

}
