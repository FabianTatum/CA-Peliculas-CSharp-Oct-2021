@page "/movies/edit/{id:int}"
@inject IRepositories repository
@inject NavigationManager navigation

<HeaderComponent></HeaderComponent>

@if(Movie == null)
{
    <h1>Cargando...</h1>
}
else
{
    <AdminFormMovie Movie="Movie" OnValidSubmit="Update" NotSelectedStaff="NotSelectedStaff" SelectedStaff="SelectedStaff" NotSelectedCategories="NotSelectedCategories" SelectedCategories="SelectedCategories"></AdminFormMovie>
}


<FooterComponent></FooterComponent>

@code{
    [Parameter] public int id {get;set;}
    public Movie Movie {get;set;}

    public List<Staff> NotSelectedStaff { get; set; } = new List<Staff>();
    public List<Staff> SelectedStaff { get; set; } = new List<Staff>();
    public List<Category> NotSelectedCategories { get; set; } = new List<Category>();
    public List<Category> SelectedCategories { get; set; } = new List<Category>();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Movie> ($"api/movie/{id}");
        Movie = responseHttp.Response; 
    }
    
    private async Task Update()
    {    
        var httpResponse = await repository.Put<Movie>($"api/Movie", Movie);
        if(httpResponse.Error)
        {
            Console.WriteLine("Error");
        }
        else
        {
            navigation.NavigateTo("/movies");
        }
    }

}